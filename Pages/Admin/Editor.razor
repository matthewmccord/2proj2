@*@page "/admin/appointments/edit/{id:long}"
@page "/admin/appointments/create"
@inherits OwningComponentBase<IAppointmentRepository>

<style>
    div.validation-message {
        color: rgb(220,53,69);
        font-weight: 500
    }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1"></h3>

<EditForm Model="a" OnValidSubmit="SaveAppointment">

    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group">
        <label>Appointment ID:</label>
        <input class="form-control" disabled value="@a.AppointmentId" />
    </div>

    <div class="form-group">
        <label>Group:</label>
        <ValidationMessage For="@(() => a.Group)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="a.Group"></InputText>
    </div>

    <div class="form-group">
        <label>Group Size:</label>
        <ValidationMessage For="@(() => a.GroupSize)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="a.GroupSize"></InputText>
    </div>


    <div class="form-group">
        <label>Email:</label>
        <ValidationMessage For="@(() => a.Email)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="a.Email"></InputText>
    </div>

    <div class="form-group">
        <label>Phone:</label>
        <ValidationMessage For="@(() => a.Phone)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="a.Phone"></InputText>
    </div>

    <div class="form-group">
        <label>Date:</label>
        <ValidationMessage For="@(() => a.Date)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="a.Date"></InputText>
    </div>
    <div class="form-group">
        <label>Time:</label>
        <ValidationMessage For="@(() => a.Time)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="a.Time"></InputText>
    </div>



    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/appointments">Cancel</NavLink>


</EditForm>


@code {

    [Parameter]
    public long Id { get; set; } = 0;
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Appointment a { get; set; } = new Appointment();

    public IAppointmentRepository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0) // existing project
        {
            a = repo.Appointments.FirstOrDefault(x => x.AppointmentId == Id);
        }
    }

    public void SaveAppointment()
    {
        if (Id == 0) //New Project
        {
            repo.CreateAppointment(a);
        }
        else
        {
            repo.SaveAppointment(a);
        }

        NavManager.NavigateTo("/admin/appointments");
    }

    [Inject]
    public NavigationManager NavManager { get; set; }
}*@
